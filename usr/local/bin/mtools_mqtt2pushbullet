#!/usr/bin/python
# -*- coding: utf-8 -*-

import os
import time
from ConfigParser import ConfigParser
import json
import paho.mqtt.client as mqtt
from pushbullet import Pushbullet

# read config
cnf = ConfigParser()
cnf.read(os.path.expanduser('~/.mtools_config'))
api_key_notif = cnf.get('pushbullet', 'api_key_notif')

# mqtt callbacks
def on_connect(mqttc, obj, flags, rc):
    print("connect ok [rc: "+str(rc)+"]")
    # subscribe
    mqttc.subscribe("gateway/pushbullet/push_message", qos=2)

def on_message(mqttc, obj, msg):
    # global vars
    global pb
    # garden atmo pressure (normalize sea level)
    if msg.topic == "gateway/pushbullet/push_message":
        try:
            json_data = json.loads(msg.payload)
            title = str(json_data['title'])
            body = str(json_data['body'])
            pb.push_note(title, body)
        except:
            pass

#def on_publish(mqttc, obj, mid):
#    print("mid: "+str(mid))

#def on_subscribe(mqttc, obj, mid, granted_qos):
#    print("Subscribed: "+str(mid)+" "+str(granted_qos))

#def on_log(mqttc, obj, level, string):
#    print(string)

if __name__ == "__main__":
    while True:
        try:
            # init pushbullet access
            pb = Pushbullet(api_key_notif)

            # init mqtt
            mqttc = mqtt.Client()
            mqttc.on_message = on_message
            mqttc.on_connect = on_connect
            #mqttc.on_publish = on_publish
            #mqttc.on_subscribe = on_subscribe
            mqttc.connect("localhost", 1883, 60)

            # main loop
            mqttc.loop_forever()
        except:
            time.sleep(30.0)
